"""Suite of functions to generate maps for test cases."""

from .req import Map
from math import sin, cos, pi
from random import random


def gen_poly(n, dist_func=None):
    """
    Return a map of a regulare polygon generated by the roots of unity.

    Parameters
    ----------
    n : int
        n-gon to be generated.
    dist_func : function, optional
        Function defining distance on the map.
        Default is set to return a Euclidean map.

    Returns
    -------
    Map
        Map of a regular n-gon.
    """
    if dist_func:
        return Map([(cos((2*pi*i)/n), sin((2*pi*i)/n)) for i in range(n)],
                   dist_func)
    else:
        return Map([(cos((2*pi*i)/n), sin((2*pi*i)/n)) for i in range(n)])


def gen_ran(n, dist_func=None):
    """
    Return a random map.

    Parameters
    ----------
    n : int
        number of map points
    dist_func : function, optional
        Function defining distance on the map.
        Default is set to return a Euclidean map.

    Returns
    -------
    Map
        Random n-point map.
    """
    if dist_func:
        return Map([(random(), random()) for i in range(n)], dist_func)
    else:
        return Map([(random(), random()) for i in range(n)])
